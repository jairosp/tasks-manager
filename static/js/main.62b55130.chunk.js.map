{"version":3,"sources":["components/Header.jsx","components/TaskManager.jsx","App.jsx","index.js"],"names":["Header","class","style","height","color","TaskManager","useState","tasks","setTasks","doneTasks","setDoneTasks","title","setTitle","desc","setDesc","errorMsg","setErrorMsg","useEffect","className","minWidth","onSubmit","e","ev","preventDefault","trim","newTask","id","uniqid","description","addNewTask","htmlFor","onChange","target","value","type","maxHeight","rows","length","map","item","onClick","newTaskArray","filter","markAsDone","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62b55130.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <nav class=\"navbar bg-primary \" style={{height:'120px'}}>\n            <div class=\"container-fluid d-flex justify-content-center\">\n                <span class=\"navbar-brand mb-0 h1 fs-1\" style={{color:'white'}}>Task Manager</span>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport uniqid from 'uniqid'\n\nconst TaskManager = () => {\n\n    const [ tasks, setTasks ] = useState([])\n    const [ doneTasks, setDoneTasks] = useState([])\n    const [ title, setTitle ] = useState('')\n    const [ desc, setDesc ] = useState('')\n    const [ errorMsg, setErrorMsg ] = useState(null)\n\n    useEffect(() => {\n        \n    }, [])\n\n    const addNewTask = (ev) => {\n        ev.preventDefault()\n        if(!title.trim()){\n            setErrorMsg('Title cannot be empty!')\n            return\n        }\n        const newTask = {\n            id: uniqid(),\n            title: title,\n            description: desc\n        }\n        setTasks([...tasks, newTask])\n        setTitle('')\n        setDesc('')\n    }\n\n    const markAsDone = (item) => {\n        const { id } = item\n        const newTaskArray = tasks.filter(item => item.id !== id)\n        setTasks(newTaskArray)\n        setDoneTasks([...doneTasks, item])\n    }\n\n\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className=\"col\" style={{minWidth:'300px'}}>\n                    <form onSubmit={(e) => {addNewTask(e)}} className='form-group d-grid gap-2 card p-3 mt-3'>\n                        <h2>Create new task</h2>\n                        <label htmlFor=\"Title\">Title</label>\n                        <input \n                            onChange={(e) => {setTitle(e.target.value)}}\n                            className='form-control' \n                            type=\"text\" \n                            id='Title'\n                            value={title}\n                        />\n                        <label htmlFor=\"Description\">Description</label>\n                        <textarea \n                            style={{maxHeight: '100px'}}\n                            onChange={(e) => {setDesc(e.target.value)}}\n                            className='form-control' \n                            type=\"text\" \n                            rows='3' \n                            id='Description'\n                            value={desc}\n                        />\n                        <input type=\"submit\" className='btn btn-primary' value='Add new task'/>\n                        {\n                        errorMsg ? (\n                            <div className='alert alert-danger'>\n                                {errorMsg}\n                            </div>\n                        ): (<span></span>)\n                        }\n                    </form>\n                    \n                </div>\n                <div className=\"col\" style={{minWidth:'300px'}}>\n                    <section className='card d-grid gap-2 p-3 mt-3'>\n                        <h2 className='mb-5'>To do { tasks.length !== 0 ? (<span>({tasks.length})</span>) : (<span></span>)}</h2>\n                        <ul className='list-group'>\n                            {\n                                tasks.length !== 0 ? (\n                                    tasks.map(item => \n                                        <li key={item.id} className='list-group-item d-flex justify-content-between align-items-start'>\n                                            <div className=\"ms-2 me-auto\">\n                                                <div className=\"fw-bold\">{item.title}</div>\n                                                {item.description}\n                                            </div>\n                                            <button onClick={() => {markAsDone(item)}} className='btn btn-primary badge me-2'>Finish!</button>\n                                            {/* <button className='btn btn-info badge me-2'>Edit task</button> */}\n                                        </li>    \n                                    )\n                                )\n                                    :\n                                (\n                                    <div className='alert alert-info'>\n                                        No tasks left, add one or take a rest.\n                                    </div>\n                                )\n                            }\n                        </ul>\n                    </section>\n                </div>\n                <div className=\"col\" style={{minWidth:'300px'}}>\n                    <section className='card d-grid gap-2 p-3 mt-3'>\n                        <h2 className='mb-5'>Done!</h2>\n                        <ul className='list-group'>\n                            {\n                                doneTasks.length !== 0 ? \n                                (\n                                    doneTasks.map( item => \n                                        <li className='list-group-item disabled' key={item.title}> \n                                            <div className=\"ms-2 me-auto\">\n                                                <div className=\"fw-bold\">{item.title}</div>\n                                                {item.description}\n                                            </div>\n                                        </li>    \n                                    )\n                                )\n                                :\n                                (\n                                    <div className='alert alert-info'>\n                                        You haven't done any task yet!\n                                    </div>\n                                )\n                            }\n                        </ul>\n                    </section>\n                </div>\n            </div>\n\n            </div>\n    )\n}\n\nexport default TaskManager\n","import React from 'react'\nimport Header from './components/Header';\nimport TaskManager from './components/TaskManager';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header></Header>\n      <TaskManager/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}